(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const d=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(r[c]=!0)}for(var s=0;s<e.length;s++){var m=[].concat(e[s]);o&&r[m[0]]||(void 0!==i&&(void 0===m[5]||(m[1]="@layer".concat(m[5].length>0?" ".concat(m[5]):""," {").concat(m[1],"}")),m[5]=i),t&&(m[2]?(m[1]="@media ".concat(m[2]," {").concat(m[1],"}"),m[2]=t):m[2]=t),a&&(m[4]?(m[1]="@supports (".concat(m[4],") {").concat(m[1],"}"),m[4]=a):m[4]="".concat(a)),n.push(m))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},r=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],m=i[s]||0,l="".concat(s," ").concat(m);i[s]=m+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=a(p,o);o.byIndex=d,n.splice(d,0,{identifier:l,updater:h,references:1})}r.push(l)}return r}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var i=o(e=e||[],a=a||{});return function(e){e=e||[];for(var r=0;r<i.length;r++){var d=t(i[r]);n[d].references--}for(var c=o(e,a),s=0;s<i.length;s++){var m=t(i[s]);0===n[m].references&&(n[m].updater(),n.splice(m,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!e;)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),a=t.n(o),i=t(569),r=t.n(i),d=t(565),c=t.n(d),s=t(216),m=t.n(s),l=t(589),u=t.n(l),p=t(426),h={};h.styleTagTransform=u(),h.setAttributes=c(),h.insert=r().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=m(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;const f=t.p+"3524c849ab38de4be923.png",C=t.p+"f963dcac51d5020e10f3.png",g=t.p+"b91865425de4b8acd4a5.png",v=t.p+"04309f3d48aa293352cd.png",w=t.p+"82539f48b9d2e484adc2.jpg";function b(e,n,t,o){this.el=e,this.className=n,this.idName=t,this.content=o;const a=document.createElement(`${e}`);return a.classList.add(`${n}`),a.setAttribute("id",t),"home"===o||"menu"===o||"about"===o||"contact"===o?(a.href="#",a):(o.match("gitHubIcon")?(a.src=f,a.alt="This is the Github logo.",e.match("a")&&(a.href="https://github.com/dxd8201")):o.match("twitterIcon")?(a.src=C,a.alt="This is the twitter logo",e.match("a")&&(a.href="https://twitter.com/angusofmu")):o.match("wizardIcon")?(a.src=g,a.alt="This is the FRWC icon.",e.match("a")&&(a.href="https://www.forgottenrunes.com/")):"feast"===o?(a.src=w,a.alt="This is a picture of our monthly feast."):"founder"===o?(a.src=v,a.alt="This is a picture of our founder."):a.textContent=o,console.log("The create function ran"),a)}function y(){const e=document.getElementById("section"),n=document.createElement("div");n.classList.add("main-content-container"),n.setAttribute("id","mainContentContainer"),e.appendChild(n),n.appendChild(new b("div","main-content-flex-container","mainContentFlexContainer",""));const t=document.getElementById("mainContentFlexContainer");return t.appendChild(new b("p","main-content-flex-item","mainContentFlexItem","WizzyFoo is your one-stop shoppe for magical dishes and arcane beverages. We feature a range of delectable items on our menu that are certified !magic. If you're looking to bring magic to your tastebuds, this is the place to be. Just don't forget to put your rune on the door on your way out.")),t.appendChild(new b("img","main-content-flex-item","mainContentFlexItem","feast")),console.log("Load home has ran"),{mainContentDiv:n}}const I=document.getElementById("content"),x=(()=>{const e=document.createElement("section");return e.setAttribute("id","section"),I.appendChild(e),e})(),E=(()=>{const e=document.createElement("nav");e.classList.add("header-nav-container"),x.appendChild(e),e.appendChild(new b("ul","nav-menu-container","navMenuContainer",""));const n=document.getElementById("navMenuContainer"),t=new b("a","anchor-tag","anchorTag","home"),o=new b("a","anchor-tag","anchorTag","menu"),a=new b("a","anchor-tag","anchorTag","about"),i=new b("a","anchor-tag","anchorTag","contact");return n.appendChild(t),n.appendChild(o),n.appendChild(a),n.appendChild(i),t.appendChild(new b("li","list-item","listItem","Home")),o.appendChild(new b("li","list-item","listItem","Menu")),a.appendChild(new b("li","list-item","listItem","About")),i.appendChild(new b("li","list-item","listItem","Contact")),{navTag:e,homeAnchor:t,menuAnchor:o,aboutAnchor:a,contactAnchor:i}})(),T=(()=>{y();const e=document.getElementById("mainContentContainer");return console.log(e),E.homeAnchor.addEventListener("click",(function(){B(),y()})),E.menuAnchor.addEventListener("click",(function(){B(),function(){const e=document.getElementById("section"),n=document.createElement("div");n.classList.add("main-content-container"),n.setAttribute("id","mainContentContainer"),e.appendChild(n),n.appendChild(new b("div","main-content-menu-flex-container","mainContentMenuFlexContainer",""));const t=document.getElementById("mainContentMenuFlexContainer");t.appendChild(new b("div","menu-card","menuCard1",""));const o=document.getElementById("menuCard1");o.appendChild(new b("div","menu-card-title","menuCardTitle","Wizard Mind Bomb")),o.appendChild(new b("div","menu-card-description","menuCardDescription","Our wizard mind bomb is made from the finest ale of Gielinor")),t.appendChild(new b("div","menu-card","menuCard2",""));const a=document.getElementById("menuCard2");a.appendChild(new b("div","menu-card-title","menuCardTitle","Wizard Mind Bomb")),a.appendChild(new b("div","menu-card-description","menuCardDescription","Our wizard mind bomb is made from the finest ale of Gielinor")),t.appendChild(new b("div","menu-card","menuCard3",""));const i=document.getElementById("menuCard3");i.appendChild(new b("div","menu-card-title","menuCardTitle","Wizard Mind Bomb")),i.appendChild(new b("div","menu-card-description","menuCardDescription","Our wizard mind bomb is made from the finest ale of Gielinor")),t.appendChild(new b("div","menu-card","menuCard4",""));const r=document.getElementById("menuCard4");r.appendChild(new b("div","menu-card-title","menuCardTitle","Wizard Mind Bomb")),r.appendChild(new b("div","menu-card-description","menuCardDescription","Our wizard mind bomb is made from the finest ale of Gielinor")),t.appendChild(new b("div","menu-card","menuCard5",""));const d=document.getElementById("menuCard5");d.appendChild(new b("div","menu-card-title","menuCardTitle","Wizard Mind Bomb")),d.appendChild(new b("div","menu-card-description","menuCardDescription","Our wizard mind bomb is made from the finest ale of Gielinor")),t.appendChild(new b("div","menu-card","menuCard6",""));const c=document.getElementById("menuCard6");c.appendChild(new b("div","menu-card-title","menuCardTitle","Wizard Mind Bomb")),c.appendChild(new b("div","menu-card-description","menuCardDescription","Our wizard mind bomb is made from the finest ale of Gielinor")),console.log("The Menu loaded.")}()})),E.aboutAnchor.addEventListener("click",(function(){B(),function(){const e=document.getElementById("section"),n=document.createElement("div");n.classList.add("main-content-container"),n.setAttribute("id","mainContentContainer"),e.appendChild(n),n.appendChild(new b("div","main-content-flex-container","mainContentFlexContainer",""));const t=document.getElementById("mainContentFlexContainer");t.appendChild(new b("p","main-content-flex-item","mainContentFlexItem","Welcome to the most magical restaurant you'll bear witness to. Forged from the deep minds of our wise arcane mages, our restaurant seeks to douse your tastebuds in the arcane. Bearing dishes inspired by more mystical times, our restaurant was born from our desire to bring back the circle of magic that has been lost through the years.")),t.appendChild(new b("img","main-content-flex-item","mainContentFlexItem","founder")),console.log("Load about has ran")}()})),E.contactAnchor.addEventListener("click",(function(){B(),function(){const e=document.getElementById("section"),n=document.createElement("div");n.classList.add("main-content-container"),n.setAttribute("id","mainContentContainer"),e.appendChild(n),n.appendChild(new b("div","main-content-flex-container","mainContentFlexContainer",""));const t=document.getElementById("mainContentFlexContainer");t.appendChild(new b("p","main-content-flex-item","mainContentFlexItem","Feel free to reach out at **********")),t.appendChild(new b("img","main-content-flex-item","mainContentFlexItem","founder")),console.log("Load contact has ran.")}()})),{mainContentDiv:e}})(),B=((()=>{const e=document.createElement("footer");e.classList.add("footer-container"),x.appendChild(e);const n=new b("a","anchor-tag","anchorTag","gitHubIcon");e.appendChild(n),n.appendChild(new b("img","footer-icon","footerIcon","gitHubIcon"));const t=new b("a","anchor-tag","anchorTag","twitterIcon");e.appendChild(t),t.appendChild(new b("img","footer-icon","footerIcon","twitterIcon"));const o=new b("a","anchor-tag","anchorTag","wizardIcon");e.appendChild(o),o.appendChild(new b("img","footer-icon","footerIcon","wizardIcon"))})(),function(){let e,n=T.mainContentDiv.getElementsByTagName("*");for(e=n.length-1;e>=0;e--)n[e].parentNode.removeChild(n[e]);console.log("deRender ran")})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,